{"version":3,"file":"list.js","sourceRoot":"","sources":["../ts/list.ts"],"names":[],"mappings":"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","sourcesContent":["class List{\r\n    private _webservice: string;\r\n    private _databaseName: string;\r\n    private _dataContainerId: string;\r\n    private _tableDataTemplate: string;\r\n    private _tableDataTemplateId : string;\r\n    private _markedClass: string;\r\n    private _dataBodyClass: string;\r\n    private _dataRowClass: string;\r\n    private _dataPrimaryKey: string;\r\n    private _dataId: string;\r\n    /**\r\n     * \r\n     * @param webservice - webserwice address with port ex. \"http://localhost:8080\"\r\n     * @param databaseName - database name ex. \"sakila\"\r\n     * @param dataContainerId - html id param where data from webservice will be presented, ex. \"dataContainerId\" <div id=\"dataContainerId\" class=\"tableContainer\" style=\"display:none\">\r\n     * @param tableDataTemplate - template file with path for data presentation ex. \"templates/tableDataTemplate.html\"\r\n     * @param tableDataTemplateId - id of <table> tag in template file where data will be present ex. \"tableDataTemplateId\" <table id=\"tableDataTemplateId\" class=\"table table-hover display\" style=\"width:100%\">\r\n     * @param markedClass - HTML class name to marked element with clicked record ex. \"table-primary\" <tr data-id=\"1\" class=\"datarow odd table-primary\" role=\"row\"> * @param dataBodyClass -  HTML element class where data are showing ex. \".databody\" <tbody class=\"databody\" data-pk=\"aktor_id\"> * @param dataRowClass - HTML element class where row data are showing ex. \".datarow\" <tr data-id=\"2\" class=\"datarow even\" role=\"row\">\r\n     * @param dataPrimaryKey - HTML element data parameter name where are primary key names ex.\"data-pk\" <tbody class=\"databody\" data-pk=\"aktor_id\">\r\n     * @param dataId - data param of HTML element with record primary key id ex. \"data-id\" <tr data-id=\"521\" class=\"datarow odd table-primary\" role=\"row\">\r\n     */\r\n    constructor(webservice: string,\r\n                databaseName: string,\r\n                dataContainerId: string = \"#dataContainerId\",\r\n                tableDataTemplate: string = \"templates/tableDataTemplate.html\",\r\n                tableDataTemplateId: string = \"#tableDataTemplateId\",\r\n                markedClass: string = \"table-primary\",  \r\n                dataBodyClass: string = \".databody\", \r\n                dataRowClass: string = \".datarow\", \r\n                dataPrimaryKey: string = \"data-pk\", \r\n                dataId: string = \"data-id\"){\r\n        //webservice adress \r\n        this._webservice = webservice;\r\n        //database name\r\n        this._databaseName = databaseName;\r\n        //id HTML element data container <div id=dataContainerId>\r\n        this._dataContainerId = dataContainerId;\r\n        //HTML template name  with path\r\n        this._tableDataTemplate = tableDataTemplate;\r\n        //id HTML element with template\r\n        this._tableDataTemplateId = tableDataTemplateId;\r\n        //markedClass is class to marked element with clicked record\r\n        this._markedClass = markedClass;        \r\n        //dataBodyClass is HTML element class where data are showing\r\n        this._dataBodyClass = dataBodyClass;\r\n        //dataRowClass is element class with single data row\r\n        this._dataRowClass = dataRowClass;\r\n        //HTML element data parameter name where are primary key names\r\n        this._dataPrimaryKey = dataPrimaryKey;\r\n        //HTML element data parameter name where are primary key values\r\n        this._dataId = dataId;\r\n        //bind this to event method \r\n        //jeżeli tego nie zrobimy, metoda obsługująca zdarzenie nic nie wie o klasie, w której się znajduje\r\n        this.getDataTable = this.getDataTable.bind(this);\r\n        this.getRecordDetail = this.getRecordDetail.bind(this);        \r\n    }\r\n\r\n\r\n    get webservice(): string {\r\n        return this._webservice;\r\n    }\r\n\r\n    set webservice(value: string) {\r\n        this._webservice = value;\r\n    }\r\n\r\n    public get databaseName() : string {\r\n        return this._databaseName;\r\n    }\r\n        \r\n    public set databaseName(databaseName: string){\r\n        this._databaseName = databaseName;\r\n    }\r\n    \r\n    public get dataContainerId() : string {\r\n        return this._dataContainerId;\r\n    }\r\n    \r\n    public set dataContainerId(dataContainerId: string){\r\n        this._dataContainerId = dataContainerId;\r\n    }\r\n    \r\n    public get tableDataTemplate() : string {\r\n        return this._tableDataTemplate;\r\n    }\r\n    \r\n    public set tableDataTemplate(tableDataTemplate: string){\r\n        this._tableDataTemplate = tableDataTemplate;\r\n    }\r\n    \r\n    public get tableDataTemplateId() : string {\r\n        return this._tableDataTemplateId;\r\n    }\r\n    \r\n    public set tableDataTemplateId(tableDataTemplateId: string){\r\n        this._tableDataTemplateId = tableDataTemplateId;\r\n    }\r\n    \r\n    public get markedClass() : string {\r\n        return this._markedClass;\r\n    }\r\n    \r\n    public set markedClass(markedClass : string){\r\n        this._markedClass = markedClass;\r\n    }\r\n    \r\n    public get dataBodyClass() : string {\r\n        return this._dataBodyClass;\r\n    }\r\n    \r\n    public set dataBodyClass(dataBodyClass: string){\r\n        this._dataBodyClass = dataBodyClass;\r\n    }\r\n    \r\n    public get dataRowClass() : string {\r\n        return this._dataRowClass;\r\n    }\r\n    \r\n    public set dataRowClass(dataRowClass: string){\r\n        this._dataRowClass = dataRowClass;\r\n    }\r\n\r\n    public set dataPrimaryKey(dataPrimaryKey: string){\r\n        this._dataPrimaryKey = dataPrimaryKey;\r\n    }\r\n    \r\n    public get dataId() : string {\r\n        return this._dataId;\r\n    }\r\n    \r\n    public set dataId(dataId: string){\r\n        this._dataId = dataId;\r\n    }\r\n    /**\r\n     * Method call on click record\r\n     * set in HTML row element class markedClass\r\n     * reading from clicked element unique ids: data-id \r\n     * reading from databody element name of primary key names: data-pk\r\n     * @param event \r\n     */\r\n    public getRecordDetail(event:Event){                \r\n        var datarow: HTMLElement;\r\n        if (event.target instanceof Element){            \r\n            let targetElement = event.target || event.srcElement;\r\n            if (targetElement.className != this._dataRowClass) \r\n                datarow = targetElement.closest(this._dataRowClass) as HTMLElement;\r\n            else datarow = targetElement as HTMLElement;            \r\n            if(datarow!==null){\r\n                let targetElement = datarow;\r\n                $('.datarow').removeClass(this._markedClass);\r\n                targetElement.classList.add(this._markedClass);\r\n                var idValueStr = targetElement.getAttribute(this._dataId);\r\n                if(idValueStr){\r\n                    var idValueArray = idValueStr.split(',');                        \r\n                    var tbodyElement = targetElement.closest(this._dataBodyClass);\r\n                    if(tbodyElement){\r\n                        var pkNameStr = tbodyElement.getAttribute(this._dataPrimaryKey);\r\n                        if(pkNameStr){\r\n                            var pkNameArray = pkNameStr.split(',');\r\n                            var questionString = '';\r\n                            for (var i = 0; i < pkNameArray.length; i++) {\r\n                                if (i == 0) {\r\n                                    questionString += '(' + pkNameArray[i] + '=' + idValueArray[i] + ')';\r\n                                }\r\n                                else {\r\n                                    questionString += ' AND (' + pkNameArray[i] + '=' + idValueArray[i] + ')';\r\n                                }\r\n                            }\r\n                            alert(questionString);                                \r\n                        }\r\n                        else console.log(\"Error: Missing data-pk parameter\");\r\n                    }\r\n                    else console.log(\"Error: Missing databody class\");\r\n                }\r\n                else console.log(\"Error: Missing data-id parameter\");\r\n            }\r\n            else console.log(\"Error: Missing datarow class\");            \r\n        }\r\n        else console.log(\"Error: Event isn't instance of Element\");\r\n    }\r\n\r\n    public getDataTable(event:Event){         \r\n        let targetElement = event.target || event.srcElement;   \r\n        let onRecordClick = this.getRecordDetail;     \r\n        let webservice = this._webservice;\r\n        let tableDataTemplate = this._tableDataTemplate;\r\n        let tableDataTemplateId = this._tableDataTemplateId;\r\n        let dataContainerId = this._dataContainerId;\r\n        let dataRowClass = this._dataRowClass;\r\n        if (targetElement instanceof HTMLElement){\r\n            let tableName = targetElement.innerText;\r\n            $.getJSON(\r\n                webservice,\r\n                {\r\n                    command: \"getTableData\",\r\n                    tableSchema: this._databaseName,\r\n                    tableName: tableName,\r\n                    format: \"JSON\",\r\n                    dataType: 'JSONP'\r\n                })\r\n                .done(function (data) {\r\n                    //console.log(JSON.stringify(data));   \r\n                    $(dataContainerId).load(tableDataTemplate, function (responseTxt, statusTxt, xhr) {\r\n                        if (statusTxt == \"success\") {\r\n                            //console.log(\"External content loaded successfully!: \"+responseTxt);                    \r\n                            var output = Mustache.to_html(responseTxt, data);\r\n                            $(dataContainerId).html(output);\r\n                            $(dataContainerId).css(\"display\", \"block\");\r\n                            //set datatables parameters\r\n                            $(tableDataTemplateId).DataTable({\r\n                                scrollY: '50vh',\r\n                                scrollCollapse: true,\r\n                                paging: false\r\n\r\n                            });\r\n                            //console.log(output);                                            \r\n                            // noinspection Annotator\r\n                            $(dataRowClass).on('click', onRecordClick);\r\n                        }\r\n                        if (statusTxt == \"error\")\r\n                            console.log(\"Error: \" + xhr.status + \": \" + xhr.statusText);\r\n                    });\r\n                })\r\n                .fail(function (jqxhr, textStatus, error) {\r\n                    var err = textStatus + \", \" + error;\r\n                    console.log(\"Request Failed: \" + err);\r\n                })\r\n                .always(function () {\r\n                    console.log(\"complete\");\r\n                });\r\n\r\n        }\r\n        else console.log(\"Selected element isn't HTMLElement\");\r\n        \r\n    }\r\n\r\n}\r\n//const lista = new List(\"table-primary\", \"http://localhost:8080\");"]}