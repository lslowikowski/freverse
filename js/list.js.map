{"version":3,"file":"list.js","sourceRoot":"","sources":["../ts/list.ts"],"names":[],"mappings":"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","sourcesContent":["class List{\n    private _webservice: string;\n    private _databaseName: string;\n    private _dataContainerId: string;\n    private _tableDataTemplate: string;\n    private _tableDataTemplateId : string;\n    private _markedClass: string;\n    private _dataBodyClass: string;\n    private _dataRowClass: string;\n    private _dataPrimaryKey: string;\n    private _dataId: string;\n    constructor(webservice: string,\n                databaseName: string,\n                dataContainerId: string = \"#dataContainerId\",\n                tableDataTemplate: string = \"templates/tableDataTemplate.html\",\n                tableDataTemplateId: string = \"#tableDataTemplateId\",\n                markedClass: string = \"table-primary\",  \n                dataBodyClass: string = \".databody\", \n                dataRowClass: string = \".datarow\", \n                dataPrimaryKey: string = \"data-pk\", \n                dataId: string = \"data-id\"){\n        //webservice adress \n        this._webservice = webservice;\n        //database name\n        this._databaseName = databaseName;\n        //id HTML element data container <div id=dataContainerId>\n        this._dataContainerId = dataContainerId;\n        //HTML template name  with path\n        this._tableDataTemplate = tableDataTemplate;\n        //id HTML element with template\n        this._tableDataTemplateId = tableDataTemplateId;\n        //markedClass is class to marked element with clicked record\n        this._markedClass = markedClass;        \n        //dataBodyClass is HTML element class where data are showing\n        this._dataBodyClass = dataBodyClass;\n        //dataRowClass is element class with single data row\n        this._dataRowClass = dataRowClass;\n        //HTML element data parameter name where are primary key names\n        this._dataPrimaryKey = dataPrimaryKey;\n        //HTML element data parameter name where are primary key values\n        this._dataId = dataId;\n        //bind this to event method \n        //jeżeli tego nie zrobimy, metoda obsługująca zdarzenie nic nie wie o klasie, w której się znajduje\n        this.getDataTable = this.getDataTable.bind(this);\n        this.getRecordDetail = this.getRecordDetail.bind(this);        \n    }\n\n\n    get webservice(): string {\n        return this._webservice;\n    }\n\n    set webservice(value: string) {\n        this._webservice = value;\n    }\n\n    public get databaseName() : string {\n        return this._databaseName;\n    }\n        \n    public set databaseName(databaseName: string){\n        this._databaseName = databaseName;\n    }\n    \n    public get dataContainerId() : string {\n        return this._dataContainerId;\n    }\n    \n    public set dataContainerId(dataContainerId: string){\n        this._dataContainerId = dataContainerId;\n    }\n    \n    public get tableDataTemplate() : string {\n        return this._tableDataTemplate;\n    }\n    \n    public set tableDataTemplate(tableDataTemplate: string){\n        this._tableDataTemplate = tableDataTemplate;\n    }\n    \n    public get tableDataTemplateId() : string {\n        return this._tableDataTemplateId;\n    }\n    \n    public set tableDataTemplateId(tableDataTemplateId: string){\n        this._tableDataTemplateId = tableDataTemplateId;\n    }\n    \n    public get markedClass() : string {\n        return this._markedClass;\n    }\n    \n    public set markedClass(markedClass : string){\n        this._markedClass = markedClass;\n    }\n    \n    public get dataBodyClass() : string {\n        return this._dataBodyClass;\n    }\n    \n    public set dataBodyClass(dataBodyClass: string){\n        this._dataBodyClass = dataBodyClass;\n    }\n    \n    public get dataRowClass() : string {\n        return this._dataRowClass;\n    }\n    \n    public set dataRowClass(dataRowClass: string){\n        this._dataRowClass = dataRowClass;\n    }\n\n    public set dataPrimaryKey(dataPrimaryKey: string){\n        this._dataPrimaryKey = dataPrimaryKey;\n    }\n    \n    public get dataId() : string {\n        return this._dataId;\n    }\n    \n    public set dataId(dataId: string){\n        this._dataId = dataId;\n    }\n\n    public getRecordDetail(event:Event){                \n        var datarow: HTMLElement;\n        if (event.target instanceof Element){            \n            let targetElement = event.target || event.srcElement;\n            if (targetElement.className != this._dataRowClass) \n                datarow = targetElement.closest(this._dataRowClass) as HTMLElement;\n            else datarow = targetElement as HTMLElement;            \n            if(datarow!==null){\n                let targetElement = datarow;\n                $('.datarow').removeClass(this._markedClass);\n                targetElement.classList.add(this._markedClass);\n                var idValueStr = targetElement.getAttribute(this._dataId);\n                if(idValueStr){\n                    var idValueArray = idValueStr.split(',');                        \n                    var tbodyElement = targetElement.closest(this._dataBodyClass);\n                    if(tbodyElement){\n                        var pkNameStr = tbodyElement.getAttribute(this._dataPrimaryKey);\n                        if(pkNameStr){\n                            var pkNameArray = pkNameStr.split(',');\n                            var questionString = '';\n                            for (var i = 0; i < pkNameArray.length; i++) {\n                                if (i == 0) {\n                                    questionString += '(' + pkNameArray[i] + '=' + idValueArray[i] + ')';\n                                }\n                                else {\n                                    questionString += ' AND (' + pkNameArray[i] + '=' + idValueArray[i] + ')';\n                                }\n                            }\n                            alert(questionString);                                \n                        }\n                        else console.log(\"Error: Missing data-pk parameter\");\n                    }\n                    else console.log(\"Error: Missing databody class\");\n                }\n                else console.log(\"Error: Missing data-id parameter\");\n            }\n            else console.log(\"Error: Missing datarow class\");            \n        }\n        else console.log(\"Error: Event isn't instance of Element\");\n    }\n\n    public getDataTable(event:Event){         \n        let targetElement = event.target || event.srcElement;   \n        let funkcja = this.getRecordDetail;     \n        let webservice = this._webservice;\n        let tableDataTemplate = this._tableDataTemplate;\n        let tableDataTemplateId = this._tableDataTemplateId;\n        let dataContainerId = this._dataContainerId;\n        let dataRowClass = this._dataRowClass;\n        if (targetElement instanceof HTMLElement){\n            let tableName = targetElement.innerText;\n            $.getJSON(\n                webservice,\n                {\n                    command: \"getTableData\",\n                    tableSchema: this._databaseName,\n                    tableName: tableName,\n                    format: \"JSON\",\n                    dataType: 'JSONP'\n                })\n                .done(function (data) {\n                    //console.log(JSON.stringify(data));   \n                    $(dataContainerId).load(tableDataTemplate, function (responseTxt, statusTxt, xhr) {\n                        if (statusTxt == \"success\") {\n                            //console.log(\"External content loaded successfully!: \"+responseTxt);                    \n                            var output = Mustache.to_html(responseTxt, data);\n                            $(dataContainerId).html(output);\n                            $(dataContainerId).css(\"display\", \"block\");\n                            //set datatables parameters\n                            $(tableDataTemplateId).DataTable({\n                                scrollY: '50vh',\n                                scrollCollapse: true,\n                                paging: false\n\n                            });\n                            //console.log(output);                                            \n                            // noinspection Annotator\n                            $(dataRowClass).on('click', funkcja);\n                        }\n                        if (statusTxt == \"error\")\n                            console.log(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n                    });\n                })\n                .fail(function (jqxhr, textStatus, error) {\n                    var err = textStatus + \", \" + error;\n                    console.log(\"Request Failed: \" + err);\n                })\n                .always(function () {\n                    console.log(\"complete\");\n                });\n\n        }\n        else console.log(\"Selected element isn't HTMLElement\");\n        \n    }\n\n}\n//const lista = new List(\"table-primary\", \"http://localhost:8080\");"]}